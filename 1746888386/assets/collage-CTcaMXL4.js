import{f as m}from"./index-CsSXPTiX.js";import{_ as p,c as l}from"./index-D7Jcohbw.js";function k({type:i,getTemplatePanelCountInfo:n,getSelectedTemplate:g,removeAllImages:c,localStore:s}){return m({type:i,removeAllImages:c,getTemplatePanelCountInfo:n,getSelectedTemplate:g,leftAddImageInfo:{dragImageId:"",isControled:!1,isImageSelectedAll:!1,imageSelectedCount:0,dragImageInfo:null},get appliedAssets(){const e={maskMap:{},filterMap:{},backgroundMap:{},templateMap:{},fontMap:{}},r=s.props.getRootStore();s.props.getPanelList().forEach(a=>{a.extra.shapeMask.maskURL&&p.forEach(r.cachedMaskMap,t=>{t.svg_image===a.extra.shapeMask.maskURL&&(e.maskMap[`${t.id}`]=t)})}),l(s.getNormalLayerList(),!0).forEach(a=>{a.nodeType==="IMAGE"&&a.extra.shapeMask.maskURL&&p.forEach(r.cachedMaskMap,t=>{t.svg_image===a.extra.shapeMask.maskURL&&(e.maskMap[`${t.id}`]=t)})});const o=this.getSelectedTemplate(),{id:f}=o;return e.templateMap[f]=o,s.currentFontList.forEach(a=>{const t=a.id;e.fontMap[t]=a}),e},get appliedVipAssets(){return{maskMap:{},filterMap:{},backgroundMap:{},templateMap:{},fontMap:{}}},get hasWatermark(){let e=!1;return p.forEach(this.appliedVipAssets,r=>{Object.keys(r).length>0&&(e=!0)}),e},get vipTypeStrings(){return""}})}export{k as c};
